Install Mirantis Container Runtime: (Docker Engine)
-------------------------------------------------------
https://docs.mirantis.com/mcr/20.10/qs-ubuntu/install-ubuntu.html
sudo apt-get --yes remove docker docker-engine docker-ce docker-ce-cli docker.io
sudo apt-get update
sudo apt-get --yes install apt-transport-https ca-certificates curl software-properties-common
DOCKER_EE_URL="https://repos.mirantis.com"
DOCKER_EE_VERSION=20.10
curl -fsSL "${DOCKER_EE_URL}/ubuntu/gpg" | sudo apt-key add -
sudo apt-key fingerprint 6D085F96
sudo add-apt-repository "deb [arch=$(dpkg --print-architecture)] $DOCKER_EE_URL/ubuntu $(lsb_release -cs) stable-$DOCKER_EE_VERSION"
sudo apt-get update
sudo apt-get --yes install docker-ee docker-ee-cli containerd.io


Install Mirantis Kubernetes Engine: (Docker and Kubernetes Orchestrator)
------------------------------------------------------------------------
https://docs.mirantis.com/mke/3.5/install/install-mke-image.html
sudo docker run --interactive --name ucp --rm --tty --volume /var/run/docker.sock:/var/run/docker.sock mirantis/ucp:3.5.3 install --host-address $( hostname --ip-address ) --interactive --force-minimums


Uninstall Mirantis Kubernetes Engine:
-------------------------------------
sudo docker container run --rm -it -v /var/run/docker.sock:/var/run/docker.sock --name ucp mirantis/ucp:3.5.3 uninstall-ucp --interactive


Install Mirantis Secure Registry: (Docker Trusted Registry)
-------------------------------------------------------------
https://docs.mirantis.com/msr/2.9/install/install-online.html
sudo docker run -it --rm mirantis/dtr:2.9.7 install --ucp-insecure-tls --ucp-url $( hostname --ip-address ):443


Documentation:
--------------
https://docs.mirantis.com/mke/3.5/ops.html
https://docs.mirantis.com/msr/2.9/ops.html


Security:
----------------------------------------------------------------------------------------------
sudo docker pull mysql:8.0.29
sudo docker pull mysql@sha256:0c0beeac7ca1937d60f54e1fb0c4a5c0b0ffee2aae37488fbc9f5ea301425551
sudo docker inspect tomcat:alpine | grep RepoDigests -A2
sudo docker inspect calico/cni:v3.17.6 | grep RepoDigests -A2
sudo docker run --read-only nginx
sudo docker run --read-only --volume /var/cache/nginx/ --volume /var/run/ nginx
sudo docker run --read-only --volume vol1:/var/cache/nginx/:rw --volume vol2:/var/run/:rw nginx
sudo docker run --read-only --volume vol1:/var/cache/nginx/:ro --volume vol2:/var/run/:ro nginx
