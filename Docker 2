https://hub.docker.com/

sudo docker tag php:phpinfo academiaonline/php:phpinfo
sudo docker push academiaonline/php:phpinfo

sudo docker service ls
sudo docker service rm confident_sutherland
sudo docker service create --mode global --publish 80:80 academiaonline/php:phpinfo -f index.php -S 0.0.0.0:80

sudo docker run --detach --publish 5000:5000 --restart always registry:2
sudo docker tag php:phpinfo localhost:5000/php:phpinfo
hostname --ip-address
sudo tee /etc/docker/daemon.json 0<<EOF
{"insecure-registries":["172.31.12.103:5000"]}
EOF
sudo service docker restart
sudo docker push localhost:5000/php:phpinfo
sudo docker pull 172.31.12.103:5000/php:phpinfo
sudo docker service create --mode global --publish 80:80 172.31.12.103:5000/php:phpinfo -f index.php -S 0.0.0.0:80

sudo docker ps
sudo docker inspect xenodochial_fermat
sudo ls /var/lib/docker/volumes/1e6886907065cb2c691ea6a45fc8bd53014624442faa369ad9034df4f3da0546/_data/docker/registry/v2/repositories/
sudo ls /var/lib/docker/volumes/1e6886907065cb2c691ea6a45fc8bd53014624442faa369ad9034df4f3da0546/_data/docker/registry/v2/repositories/php/_manifests/tags/

sudo docker pull mysql
sudo docker tag mysql localhost:5000/mysql
sudo docker push localhost:5000/mysql
sudo ls /var/lib/docker/volumes/1e6886907065cb2c691ea6a45fc8bd53014624442faa369ad9034df4f3da0546/_data/docker/registry/v2/repositories/
sudo ls /var/lib/docker/volumes/1e6886907065cb2c691ea6a45fc8bd53014624442faa369ad9034df4f3da0546/_data/docker/registry/v2/repositories/mysql/_manifests/tags
sudo docker pull 172.31.12.103:5000/mysql

tee phpinfo/Dockerfile-flat 0<<EOF
FROM php
COPY index.php .
FROM scratch
COPY --from=0 / /
EOF
sudo docker build --file phpinfo/Dockerfile-flat --tag php:flat phpinfo/

sudo docker network create nginx
sudo docker service create --mode global --publish 80:80 nginx 

sudo docker ps
sudo docker exec b72ca2d648bf ifconfig
ifconfig

sudo docker network create frontend
sudo docker network create backend
sudo docker run --detach --name web-server --network frontend --publish 80:80 nginx:alpine
sudo docker run --detach --name tomcat-server --network frontend tomcat:alpine
sudo docker run --detach --env MYSQL_ROOT_PASSWORD=1234 --name mysql-server --network backend mysql
sudo docker network connect backend tomcat-server
sudo docker exec web-server ping tomcat-server
sudo docker exec web-server ping mysql-server
sudo docker exec tomcat-server ping mysql-server

sudo docker rm --force mysql-server tomcat-server web-server
sudo docker network prune --force

sudo docker network create frontend --driver overlay
sudo docker network create backend --driver overlay
sudo docker service create --mode global --name web-server --network frontend --publish 80:80 nginx:alpine
sudo docker service create --mode global --name tomcat-server --network frontend --network backend tomcat:alpine
sudo docker service create --env MYSQL_ROOT_PASSWORD=1234 --mode replicated --name mysql-server --network backend --replicas 1 mysql
sudo docker service ps web-server
sudo docker service ps tomcat-server
sudo docker service ps mysql-server
sudo docker exec web-server.zn2etxjzn5de4mxtvb96hikf8.5x801d2qt0jfmulv7jiblwpkz ping tomcat-server
sudo docker exec web-server.zn2etxjzn5de4mxtvb96hikf8.5x801d2qt0jfmulv7jiblwpkz ping mysql-server
sudo docker exec tomcat-server.zn2etxjzn5de4mxtvb96hikf8.a9u1vvfadsjdgudqy8905fcb7 ping mysql-server
